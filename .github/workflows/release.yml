name: 'publicar'

on:
  push:
    tags:
      - 'v*' # Se ejecuta cuando hagas push de un tag tipo v1.0.0
  workflow_dispatch: # Permite lanzarlo manualmente

permissions:
  contents: write    # Permiso global para escribir contenido (subir artefactos, crear releases)
  packages: write    # Si necesitas publicar paquetes
  issues: read       # Si necesitas leer issues
  pull-requests: read

jobs:
  publicar-tauri:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    steps:
      - name: 📥 Descargar el código
        uses: actions/checkout@v4

      - name: 🔧 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: 🔨 Instalar Rust estable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # 🔹 Dependencias Linux
      - name: 🐧 Instalar dependencias del sistema (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            imagemagick

      # 🔹 Dependencias macOS
      - name: 🍎 Instalar dependencias del sistema (macOS)
        if: runner.os == 'macOS'
        shell: bash
        run: brew install imagemagick || true

      # 🔹 Dependencias Windows
      - name: 🪟 Instalar dependencias del sistema (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: choco install imagemagick -y

      - name: 📦 Instalar pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: 📦 Instalar dependencias del frontend
        run: pnpm install --frozen-lockfile

      # 🔹 (Opcional) Convertir iconos a RGBA
      # - name: 🔄 Convertir iconos a RGBA
      #   if: runner.os != 'Windows'
      #   shell: bash
      #   run: |
      #     if [ -d "src-tauri/icons" ]; then
      #       for f in src-tauri/icons/*.png; do
      #         magick "$f" -define png:color-type=6 "$f"
      #       done
      #     fi

      - name: 🚀 Construir y publicar app Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'App ${{ github.ref_name }}'
          releaseBody: 'Consulta los assets para descargar e instalar esta versión.'
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
