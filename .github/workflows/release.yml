name: 'publicar' # Nombre del workflow

on:
  push:
    branches:
      - release
# Este workflow se ejecutará cada vez que haya un push a la rama `release`.
# Creará o actualizará un GitHub Release, construirá tu app y subirá los artefactos al release.

jobs:
  publicar-tauri:
    permissions:
      contents: write # Permisos para poder crear/modificar releases
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # Para Macs con procesadores Apple Silicon (M1 y superiores)
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # Para Macs con procesadores Intel
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # Para Linux. (Para Tauri v1 se podía usar ubuntu-20.04)
            args: ''
          - platform: 'windows-latest' # Para Windows
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: 📥 Descargar el código
        uses: actions/checkout@v4

      - name: 🔧 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/* # Instala la última versión LTS de Node.js

      - name: 🔨 Instalar Rust estable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Estos targets son solo para macOS, por eso el condicional para no ralentizar builds en Windows/Linux.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: 🐧 Instalar dependencias del sistema (solo Ubuntu)
        if: matrix.platform == 'ubuntu-22.04' # Debe coincidir con el valor de platform definido arriba
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 es para Tauri v1, webkitgtk 4.1 es para Tauri v2.
        # Puedes eliminar el que no uses para acelerar el workflow.

      - name: 📦 Instalar dependencias del frontend
        run: yarn install # Cambia a npm, pnpm o bun dependiendo del gestor de paquetes que uses.

      - name: 🚀 Construir y publicar app Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # El action reemplaza automáticamente __VERSION__ con la versión de la app.
          releaseName: 'App v__VERSION__' # Nombre del release en GitHub
          releaseBody: 'Consulta los assets para descargar e instalar esta versión.'
          releaseDraft: true # Se creará como borrador (puedes publicarlo manualmente después)
          prerelease: false # No es una versión previa (beta)
          args: ${{ matrix.args }} # Argumentos específicos según la plataforma
